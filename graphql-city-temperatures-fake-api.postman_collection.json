{
	"info": {
		"_postman_id": "1d25e13a-2b0a-4929-bb5e-9a0d2f4bdd58",
		"name": "graphql-city-temperatures-fake-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20802395"
	},
	"item": [
		{
			"name": "Temperatura atual",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Has actual temperature\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.today).to.have.property('actual')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  getCityByName(name: \"Belo Horizonte\"){\r\n    id\r\n    name\r\n    country\r\n    coordinates {\r\n      lon\r\n      lat\r\n    }\r\n    temperature {\r\n      today{\r\n        actual\r\n      }\r\n    }\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Temperatura mínima e máxima hoje",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Has min temperature today\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.today).to.have.property('min')\r",
							"});\r",
							"pm.test(\"Has max temperature today\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.today).to.have.property('max')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  getCityByName(name: \"Belo Horizonte\"){\r\n    id\r\n    name\r\n    country\r\n    coordinates {\r\n      lon\r\n      lat\r\n    }\r\n    temperature {\r\n      today{\r\n        max\r\n        min\r\n      }\r\n    }\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Temperatura mínima e máximo 7 dias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Has next 7 days temperature\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature).to.have.property('next7Days')\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.next7Days.length).to.eql(7)\r",
							"});\r",
							"pm.test(\"Has max and min temperature of next 7 days\", function () {\r",
							"    _.each(pm.response.json().data.getCityByName.temperature.next7Days, (item) => {\r",
							"        pm.expect(item).to.have.property(\"min\");\r",
							"        pm.expect(item).to.have.property(\"max\");\r",
							"    })\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  getCityByName(name: \"Belo Horizonte\"){\r\n    id\r\n    name\r\n    country\r\n    coordinates {\r\n      lon\r\n      lat\r\n    }\r\n    temperature {\r\n      next7Days{\r\n          max\r\n          min\r\n      }\r\n    }\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Temperatura mínima, atual e máxima hoje",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Has actual temperature today\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.today).to.have.property('actual')\r",
							"});\r",
							"pm.test(\"Has min temperature today\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.today).to.have.property('min')\r",
							"});\r",
							"pm.test(\"Has max temperature today\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.getCityByName.temperature.today).to.have.property('max')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n  getCityByName(name: \"Belo Horizonte\"){\r\n    id\r\n    name\r\n    country\r\n    coordinates {\r\n      lon\r\n      lat\r\n    }\r\n    temperature {\r\n      today{\r\n        actual\r\n      }\r\n    }\r\n  }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}